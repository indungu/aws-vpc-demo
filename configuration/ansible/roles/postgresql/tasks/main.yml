---
# This role sets up the postgres db provisioning

- name: Update all packages to the latest version
  apt:
    update_cache: yes

- name: Adding PostgreSQL PPA
  shell:
    chdir: /etc/apt/sources.list.d/
    creates: pgdg.list
    cmd: |
      bash -c 'cat > /etc/apt/sources.list.d/pgdg.list << EOF
        deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main
      EOF'
      wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

- name: Installing PostgreSQL and its dependencies
  apt:
    update_cache: yes
    name: "{{ item }}"
    state: present
  with_items:
    - python3-pip
    - postgresql
    - libpq-dev

- name: Installing psycopg2
  shell: |
    pip3 install psycopg2

- name: Configuring PostgreSQL MD5 login.
  shell: |
    sed -i -e 's/peer/md5/g' /etc/postgresql/10/main/pg_hba.conf

- name: Creating Database Admin user
  postgresql_user:
    encrypted: yes
    name: yummydbadmin
    password: password
    role_attr_flags: SUPERUSER,CREATEDB,CREATEROLE
  become_user: postgres

- name: Creating App database
  postgresql_db:
    name: yummy_rest
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    owner: yummydbadmin
  become_user: postgres

- name: Creating database setup script
  shell: |
    bash -c 'cat > /home/ubuntu/db_init.sh << EOF
      #!/bin/bash
      source /etc/profile.d/setyummyvars.sh
      source /home/ubuntu/yummy-venv/bin/activate
      cd /home/ubuntu/yummy-rest
      if [[ -d ./migrations ]]; then
        python manage.py db migrate
        python manage.py db upgrade
      else
        python manage.py db init
        python manage.py db migrate
        python manage.py db upgrade
      fi
      deactivate
    EOF'
    bash -c 'cat > /etc/profile.d/init_db.sh << EOF
      sudo bash /home/ubuntu/db_init.sh
    EOF'
    chmod +x /etc/profile.d/init_db.sh
    chmod +x /home/ubuntu/db_init.sh

...